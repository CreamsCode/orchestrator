name: Delete AWS Resources

on:
  workflow_dispatch: # Permite activar manualmente este workflow

jobs:
  delete-resources:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Delete EC2 Instances
        run: |
          echo "Deleting EC2 instances..."
          INSTANCE_IDS=$(aws ec2 describe-instances \
            --query "Reservations[].Instances[].InstanceId" \
            --output text)
          if [ -n "$INSTANCE_IDS" ]; then
            aws ec2 terminate-instances --instance-ids $INSTANCE_IDS
            echo "Waiting for EC2 instances to terminate..."
            aws ec2 wait instance-terminated --instance-ids $INSTANCE_IDS
          else
            echo "No EC2 instances found."
          fi

      - name: Delete SQS Queues
        run: |
          echo "Deleting SQS queues..."
          QUEUE_URLS=$(aws sqs list-queues --query "QueueUrls[]" --output text)
          if [ -n "$QUEUE_URLS" ]; then
            for QUEUE_URL in $QUEUE_URLS; do
              echo "Attempting to delete queue: $QUEUE_URL"
              aws sqs delete-queue --queue-url "$QUEUE_URL" || echo "Failed to delete queue: $QUEUE_URL (may not exist)"
            done
          else
            echo "No SQS queues found."
          fi

      - name: Delete VPCs with Dependencies
        run: |
          VPC_IDS=$(aws ec2 describe-vpcs --query "Vpcs[].VpcId" --output text)
          for VPC_ID in $VPC_IDS; do
            echo "Processing VPC: $VPC_ID"

            # Delete Subnets
            SUBNET_IDS=$(aws ec2 describe-subnets --filters "Name=vpc-id,Values=$VPC_ID" --query "Subnets[].SubnetId" --output text)
            for SUBNET_ID in $SUBNET_IDS; do
              aws ec2 delete-subnet --subnet-id $SUBNET_ID
              echo "Deleted Subnet: $SUBNET_ID"
            done

            # Delete Internet Gateway
            IGW_ID=$(aws ec2 describe-internet-gateways --filters "Name=attachment.vpc-id,Values=$VPC_ID" --query "InternetGateways[].InternetGatewayId" --output text)
            if [ -n "$IGW_ID" ]; then
              aws ec2 detach-internet-gateway --internet-gateway-id $IGW_ID --vpc-id $VPC_ID
              aws ec2 delete-internet-gateway --internet-gateway-id $IGW_ID
              echo "Deleted Internet Gateway: $IGW_ID"
            fi

            # Delete Route Tables
            ROUTE_TABLE_IDS=$(aws ec2 describe-route-tables --filters "Name=vpc-id,Values=$VPC_ID" --query "RouteTables[].RouteTableId" --output text)
            for RT_ID in $ROUTE_TABLE_IDS; do
              aws ec2 delete-route-table --route-table-id $RT_ID
              echo "Deleted Route Table: $RT_ID"
            done

            # Delete Security Groups
            SG_IDS=$(aws ec2 describe-security-groups --filters "Name=vpc-id,Values=$VPC_ID" --query "SecurityGroups[?GroupName!='default'].GroupId" --output text)
            for SG_ID in $SG_IDS; do
              aws ec2 delete-security-group --group-id $SG_ID
              echo "Deleted Security Group: $SG_ID"
            done

            # Delete VPC
            aws ec2 delete-vpc --vpc-id $VPC_ID
            echo "Deleted VPC: $VPC_ID"
          done
      

      - name: Cleanup Complete
        run: echo "All resources have been deleted."
