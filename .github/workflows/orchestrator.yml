name: Orchestrator Pipeline

on:
  workflow_dispatch: # Ejecuta el pipeline manualmente desde GitHub Actions

jobs:
  orchestrate:
    runs-on: ubuntu-latest

    env:
      COLLECTOR_REPO: "CreamsCode/collector"  # Repositorio del Collector
      DL_BUILDER_REPO: "CreamsCode/datalake-builder"    # Repositorio del Listener

    steps:
      - name: Set up GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh
          gh auth login --with-token <<< "${{ secrets.MY_GITHUB_TOKEN }}"

      - name: Trigger Collector Pipeline
        run: |
          gh workflow run collector.yml --repo $COLLECTOR_REPO

       - name: Wait for Collector Completion
        run: |
            echo "Waiting for Collector pipeline to complete..."
            sleep 5
        
            while true; do
                # Verifica el estado del pipeline
                running=$(gh run list --repo $COLLECTOR_REPO --status in_progress --json databaseId | jq length)
                failed=$(gh run list --repo $COLLECTOR_REPO --status failure --json databaseId | jq length)
        
                # Si no hay ejecuciones activas
                if [[ "$running" -eq 0 ]]; then
                    if [[ "$failed" -gt 0 ]]; then
                        echo "Collector pipeline failed. Exiting..."
                        exit 1
                    fi
        
                    echo "Collector pipeline completed successfully."
                    break
                fi
        
                echo "Waiting for Collector pipeline to complete..."
                sleep 15
            done
        

       - name: Get Collector Outputs
        run: |
          # Obtener el run-id
          run_id=$(gh run list --repo $COLLECTOR_REPO --status completed --json databaseId --jq '.[0].databaseId')
          
          if [[ -z "$run_id" ]]; then
              echo "No completed runs found for the Collector pipeline."
              exit 1
          fi
          
          # Obtener los logs del Collector y procesar las salidas
          OUTPUTS=$(gh run view "$run_id" --repo $COLLECTOR_REPO --log | grep -E 'SQS_QUEUE_URL|SCRAPER_IP')

          if [[ -z "$OUTPUTS" ]]; then
              echo "No outputs found in the logs for run-id $run_id."
              exit 1
          fi

          # Extraer las salidas
          SQS_QUEUE_URL=$(echo "$OUTPUTS" | grep SQS_QUEUE_URL | cut -d '=' -f2)
          SCRAPER_IP=$(echo "$OUTPUTS" | grep SCRAPER_IP | cut -d '=' -f2)

          # Exportar las salidas
          echo "SQS_QUEUE_URL=$SQS_QUEUE_URL" >> $GITHUB_ENV
          echo "SCRAPER_IP=$SCRAPER_IP" >> $GITHUB_ENV


      - name: Trigger Listener Pipeline
        run: |
          gh workflow run listener.yml --repo $DL_BUILDER_REPO \
            -f sqs_queue_url="${{ env.SQS_QUEUE_URL }}" \
            -f scraper_ip="${{ env.SCRAPER_IP }}"
